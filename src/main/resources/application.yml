spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
  main:
#    allow-circular-references: true
    lazy-initialization: true
  redis:
    url: ${REDIS_URI}
  data:
    mongodb:
      uri: ${MONGODB_URI}
      database: ${MONGODB_DATABASE}
      auto-index-creation: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL}
    password: ${APP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  # kafka:
  #   bootstrap-servers: ${KAFKA_SERVERS}
  #   producer:
  #     key-serializer: org.apache.kafka.common.serialization.StringSerializer
  #     value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  #   consumer:
  #     group-id: weekly-sentiment-group
  #     key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  #     value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  #     properties:
  #       spring:
  #         json:
  #           trusted:
  #             packages: net.engineeringdigest.journalApp.model
  #   properties:
  #     security:
  #       protocol: SASL_SSL
  #     sasl:
  #       mechanism: PLAIN
  #       jaas:
  #         config: ${KAFKA_CONFIG}
  #     session:
  #       timeout:
  #         ms: 45000
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration

server:
  port: 8080
  servlet:
    context-path: /journal

weather:
  api:
    key: ${WEATHER_API_KEY}

quotes:
  api:
    key: ${QUOTES_API_KEY}
    key2: ${QUOTES_API_KEY2}

springdoc:
  swagger-ui:
    path: /

